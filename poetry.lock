[[package]]
name = "agate"
version = "1.9.1"
description = "A data analysis library that is optimized for humans instead of machines."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Babel = ">=2.0"
isodate = ">=0.5.4"
leather = ">=0.3.2"
parsedatetime = ">=2.1,<2.5 || >2.5"
python-slugify = ">=1.2.1"
pytimeparse = ">=1.1.5"
tzdata = {version = ">=2023.3", markers = "platform_system == \"Windows\""}

[package.extras]
test = ["coverage (>=3.7.1)", "cssselect (>=0.9.1)", "lxml (>=3.6.0)", "pytest", "pytest-cov", "backports.zoneinfo", "PyICU (>=2.4.2)"]

[[package]]
name = "altair"
version = "5.5.0"
description = "Vega-Altair: A declarative statistical visualization library for Python."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
jinja2 = "*"
jsonschema = ">=3.0"
narwhals = ">=1.14.2"
packaging = "*"
typing-extensions = {version = ">=4.10.0", markers = "python_version < \"3.14\""}

[package.extras]
all = ["altair-tiles (>=0.3.0)", "anywidget (>=0.9.0)", "numpy", "pandas (>=1.1.3)", "pyarrow (>=11)", "vega-datasets (>=0.9.0)", "vegafusion[embed] (>=1.6.6)", "vl-convert-python (>=1.7.0)"]
dev = ["duckdb (>=1.0)", "geopandas", "hatch (>=1.13.0)", "ipython", "mistune", "mypy", "pandas-stubs", "pandas (>=1.1.3)", "polars (>=0.20.3)", "pyarrow-stubs", "pytest", "pytest-cov", "pytest-xdist[psutil] (>=3.5,<4.0)", "ruff (>=0.6.0)", "types-jsonschema", "types-setuptools"]
doc = ["docutils", "jinja2", "myst-parser", "numpydoc", "pillow (>=9,<10)", "pydata-sphinx-theme (>=0.14.1)", "scipy", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinxext-altair"]
save = ["vl-convert-python (>=1.7.0)"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "appnope"
version = "0.1.4"
description = "Disable App Nap on macOS >= 10.9"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "asttokens"
version = "3.0.0"
description = "Annotate AST trees with source code positions"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
astroid = ["astroid (>=2,<4)"]
test = ["astroid (>=2,<4)", "pytest", "pytest-cov", "pytest-xdist"]

[[package]]
name = "attrs"
version = "24.3.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
benchmark = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-codspeed", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
cov = ["cloudpickle", "coverage[toml] (>=5.3)", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
dev = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pre-commit-uv", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
docs = ["cogapp", "furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier (<24.7)"]
tests = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
tests-mypy = ["mypy (>=1.11.1)", "pytest-mypy-plugins"]

[[package]]
name = "babel"
version = "2.16.0"
description = "Internationalization utilities"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pytest (>=6.0)", "pytest-cov", "freezegun (>=1.0,<2.0)"]

[[package]]
name = "blinker"
version = "1.9.0"
description = "Fast, simple object-to-object and broadcast signaling"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "cachetools"
version = "5.5.0"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "certifi"
version = "2024.12.14"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.17.1"
description = "Foreign Function Interface for Python calling C code."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "3.4.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "click"
version = "8.1.7"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "comm"
version = "0.2.2"
description = "Jupyter Python Comm implementation, for usage in ipykernel, xeus-python etc."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
traitlets = ">=4"

[package.extras]
test = ["pytest"]

[[package]]
name = "daff"
version = "1.3.46"
description = "Diff and patch tables"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "dbt-adapters"
version = "1.13.0"
description = "The set of adapter protocols and base functionality that supports integration with dbt-core"
category = "main"
optional = false
python-versions = ">=3.9.0"

[package.dependencies]
agate = ">=1.0,<2.0"
dbt-common = ">=1.13,<2.0"
mashumaro = {version = ">=3.9,<3.15", extras = ["msgpack"]}
protobuf = ">=5.0,<6.0"
pytz = ">=2015.7"
typing-extensions = ">=4.0,<5.0"

[[package]]
name = "dbt-common"
version = "1.14.0"
description = "The shared common utilities that dbt-core and adapter implementations use"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
agate = ">=1.7.0,<1.10"
colorama = ">=0.3.9,<0.5"
deepdiff = ">=7.0,<8.0"
isodate = ">=0.6,<0.7"
jinja2 = ">=3.1.3,<4"
jsonschema = ">=4.0,<5.0"
mashumaro = {version = ">=3.9,<4.0", extras = ["msgpack"]}
pathspec = ">=0.9,<0.13"
protobuf = ">=5.0,<6.0"
python-dateutil = ">=2.0,<3.0"
requests = "<3.0.0"
typing-extensions = ">=4.4,<5.0"

[package.extras]
build = ["check-wheel-contents", "twine", "wheel"]
lint = ["black (>=23.3,<24.0)", "flake8", "flake8-docstrings", "flake8-pyproject", "mypy (>=1.3,<2.0)", "pytest (>=7.3,<8.0)", "types-jinja2 (>=2.11,<3.0)", "types-jsonschema (>=4.17,<5.0)", "types-protobuf (>=5.0,<6.0)", "types-python-dateutil (>=2.8,<3.0)", "types-pyyaml (>=6.0,<7.0)", "types-requests"]
test = ["hypothesis (>=6.87,<7.0)", "pytest-cov (>=4.1,<5.0)", "pytest-mock", "pytest-xdist (>=3.2,<4.0)", "pytest (>=7.3,<8.0)"]

[[package]]
name = "dbt-core"
version = "1.9.1"
description = "With dbt, data analysts and engineers can build analytics the way engineers build applications."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
agate = ">=1.7.0,<1.10"
click = ">=8.0.2,<9.0"
daff = ">=1.3.46"
dbt-adapters = ">=1.10.1,<2.0"
dbt-common = ">=1.13.0,<2.0"
dbt-extractor = ">=0.5.0,<=0.6"
dbt-semantic-interfaces = ">=0.7.4,<0.8"
Jinja2 = ">=3.1.3,<4"
mashumaro = {version = ">=3.9,<3.15", extras = ["msgpack"]}
networkx = ">=2.3,<4.0"
packaging = ">20.9"
pathspec = ">=0.9,<0.13"
protobuf = ">=5.0,<6.0"
pytz = ">=2015.7"
pyyaml = ">=6.0"
requests = "<3.0.0"
snowplow-tracker = ">=1.0.2,<2.0"
sqlparse = ">=0.5.0,<0.6.0"
typing-extensions = ">=4.4"

[[package]]
name = "dbt-duckdb"
version = "1.9.1"
description = "The duckdb adapter plugin for dbt (data build tool)"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
dbt-adapters = ">=1,<2"
dbt-common = ">=1,<2"
dbt-core = ">=1.8.0"
duckdb = ">=1.0.0"

[package.extras]
glue = ["boto3", "mypy-boto3-glue"]
md = ["duckdb (==1.1.1)"]

[[package]]
name = "dbt-extractor"
version = "0.5.1"
description = "A tool to analyze and extract information from Jinja used in dbt projects."
category = "main"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "dbt-semantic-interfaces"
version = "0.7.4"
description = "The shared semantic layer definitions that dbt-core and MetricFlow use"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
click = ">=7.0,<9.0"
importlib-metadata = ">=6.0,<7"
jinja2 = ">=3.1.3,<4"
jsonschema = ">=4.0,<5"
more-itertools = ">=8.0,<11.0"
pydantic = ">=1.10,<3"
python-dateutil = ">=2.0,<3"
pyyaml = ">=6.0,<7"
typing-extensions = ">=4.4,<5"

[[package]]
name = "debugpy"
version = "1.8.11"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "deepdiff"
version = "7.0.1"
description = "Deep Difference and Search of any Python object/data. Recreate objects by adding adding deltas to each other."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
ordered-set = ">=4.1.0,<4.2.0"

[package.extras]
cli = ["click (==8.1.7)", "pyyaml (==6.0.1)"]
optimize = ["orjson"]

[[package]]
name = "dlt"
version = "1.5.0"
description = "dlt is an open-source python-first scalable data loading library that does not require any backend to run."
category = "main"
optional = false
python-versions = "<3.13,>=3.8.1"

[package.dependencies]
click = ">=7.1"
duckdb = {version = ">=0.9", optional = true, markers = "extra == \"duckdb\" or extra == \"motherduck\""}
fsspec = ">=2022.4.0"
gitpython = ">=3.1.29"
giturlparse = ">=0.10.0"
hexbytes = ">=0.2.2"
humanize = ">=4.4.0"
jsonpath-ng = ">=1.5.3"
makefun = ">=1.15.0"
orjson = {version = ">=3.6.7,<3.9.11 || >3.9.11,<3.9.12 || >3.9.12,<3.9.13 || >3.9.13,<3.9.14 || >3.9.14,<3.10.1 || >3.10.1,<4", markers = "platform_python_implementation != \"PyPy\""}
packaging = ">=21.1"
pathvalidate = ">=2.5.2"
pendulum = ">=2.1.2"
pluggy = ">=1.3.0"
pytz = ">=2022.6"
PyYAML = ">=5.4.1"
requests = ">=2.26.0"
requirements-parser = ">=0.5.0"
semver = ">=3.0.0"
simplejson = ">=3.17.5"
tenacity = ">=8.0.2"
tomlkit = ">=0.11.3"
typing-extensions = ">=4.0.0"
tzdata = ">=2022.1"
win-precise-time = {version = ">=1.4.2", markers = "os_name == \"nt\""}

[package.extras]
postgres = ["psycopg2-binary (>=2.9.1)", "psycopg2cffi (>=2.9.0)"]
redshift = ["psycopg2-binary (>=2.9.1)", "psycopg2cffi (>=2.9.0)"]
postgis = ["psycopg2-binary (>=2.9.1)", "psycopg2cffi (>=2.9.0)"]
gcp = ["grpcio (>=1.50.0)", "google-cloud-bigquery (>=2.26.0)", "gcsfs (>=2022.4.0)", "db-dtypes (>=1.2.0)"]
bigquery = ["grpcio (>=1.50.0)", "google-cloud-bigquery (>=2.26.0)", "pyarrow (>=12.0.0)", "gcsfs (>=2022.4.0)", "db-dtypes (>=1.2.0)"]
parquet = ["pyarrow (>=12.0.0)"]
motherduck = ["pyarrow (>=12.0.0)", "duckdb (>=0.9)"]
athena = ["pyarrow (>=12.0.0)", "s3fs (>=2022.4.0)", "botocore (>=1.28)", "pyathena (>=2.9.6)"]
synapse = ["pyarrow (>=12.0.0)", "adlfs (>=2024.7.0)", "pyodbc (>=4.0.39)"]
clickhouse = ["pyarrow (>=12.0.0)", "s3fs (>=2022.4.0)", "gcsfs (>=2022.4.0)", "adlfs (>=2024.7.0)", "clickhouse-driver (>=0.2.7)", "clickhouse-connect (>=0.7.7)"]
dremio = ["pyarrow (>=12.0.0)"]
lancedb = ["pyarrow (>=12.0.0)", "lancedb (>=0.8.2)", "tantivy (>=0.22.0)"]
deltalake = ["pyarrow (>=12.0.0)", "deltalake (>=0.21.0)"]
pyiceberg = ["pyarrow (>=12.0.0)", "sqlalchemy (>=1.4)", "pyiceberg (>=0.8.1)"]
duckdb = ["duckdb (>=0.9)"]
filesystem = ["s3fs (>=2022.4.0)", "botocore (>=1.28)", "sqlglot (>=20.0.0)"]
s3 = ["s3fs (>=2022.4.0)", "botocore (>=1.28)"]
gs = ["gcsfs (>=2022.4.0)"]
snowflake = ["snowflake-connector-python (>=3.5.0)"]
cli = ["cron-descriptor (>=1.2.32)", "pipdeptree (>=2.9.0,<2.10)"]
weaviate = ["weaviate-client (>=3.22)"]
az = ["adlfs (>=2024.7.0)"]
mssql = ["pyodbc (>=4.0.39)"]
qdrant = ["qdrant-client[fastembed] (>=1.8)"]
databricks = ["databricks-sql-connector (>=2.9.3)", "databricks-sdk (>=0.38.0)"]
sql-database = ["sqlalchemy (>=1.4)"]
sqlalchemy = ["sqlalchemy (>=1.4)", "alembic (>1.10.0)"]
sftp = ["paramiko (>=3.3.0)"]

[[package]]
name = "duckdb"
version = "1.1.3"
description = "DuckDB in-process database"
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "exceptiongroup"
version = "1.2.2"
description = "Backport of PEP 654 (exception groups)"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "executing"
version = "2.1.0"
description = "Get the currently executing AST node of a frame, and other information"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
tests = ["asttokens (>=2.1.0)", "ipython", "pytest", "coverage", "coverage-enable-subprocess", "littleutils", "rich"]

[[package]]
name = "fsspec"
version = "2024.10.0"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
dev = ["pre-commit", "ruff"]
doc = ["numpydoc", "sphinx", "sphinx-design", "sphinx-rtd-theme", "yarl"]
dropbox = ["dropbox", "dropboxdrivefs", "requests"]
full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "dask", "distributed", "dropbox", "dropboxdrivefs", "fusepy", "gcsfs", "libarchive-c", "ocifs", "panel", "paramiko", "pyarrow (>=1)", "pygit2", "requests", "s3fs", "smbprotocol", "tqdm"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
test = ["aiohttp (!=4.0.0a0,!=4.0.0a1)", "numpy", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "requests"]
test-downstream = ["aiobotocore (>=2.5.4,<3.0.0)", "dask-expr", "dask", "moto[server] (>4,<5)", "pytest-timeout", "xarray"]
test-full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "cloudpickle", "dask", "distributed", "dropbox", "dropboxdrivefs", "fastparquet", "fusepy", "gcsfs", "jinja2", "kerchunk", "libarchive-c", "lz4", "notebook", "numpy", "ocifs", "pandas", "panel", "paramiko", "pyarrow", "pyarrow (>=1)", "pyftpdlib", "pygit2", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "python-snappy", "requests", "smbprotocol", "tqdm", "urllib3", "zarr", "zstandard"]
tqdm = ["tqdm"]

[[package]]
name = "gitdb"
version = "4.0.11"
description = "Git Object Database"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
smmap = ">=3.0.1,<6"

[[package]]
name = "gitpython"
version = "3.1.43"
description = "GitPython is a Python library used to interact with Git repositories"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[package.extras]
doc = ["sphinx (==4.3.2)", "sphinx-rtd-theme", "sphinxcontrib-applehelp (>=1.0.2,<=1.0.4)", "sphinxcontrib-devhelp (==1.0.2)", "sphinxcontrib-htmlhelp (>=2.0.0,<=2.0.1)", "sphinxcontrib-qthelp (==1.0.3)", "sphinxcontrib-serializinghtml (==1.1.5)", "sphinx-autodoc-typehints"]
test = ["coverage", "ddt (>=1.1.1,!=1.4.3)", "mypy", "pre-commit", "pytest (>=7.3.1)", "pytest-cov", "pytest-instafail", "pytest-mock", "pytest-sugar", "typing-extensions", "mock"]

[[package]]
name = "giturlparse"
version = "0.12.0"
description = "A Git URL parsing module (supports parsing and rewriting)"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "hexbytes"
version = "1.2.1"
description = "hexbytes: Python `bytes` subclass that decodes hex, with a readable console output"
category = "main"
optional = false
python-versions = "<4,>=3.8"

[package.extras]
dev = ["build (>=0.9.0)", "bump-my-version (>=0.19.0)", "ipython", "mypy (==1.10.0)", "pre-commit (>=3.4.0)", "tox (>=4.0.0)", "twine", "wheel", "sphinx (>=5.3.0)", "sphinx-rtd-theme (>=1.0.0)", "towncrier (>=21,<22)", "eth-utils (>=2.0.0)", "hypothesis (>=3.44.24,<=6.31.6)", "pytest (>=7.0.0)", "pytest-xdist (>=2.4.0)"]
docs = ["sphinx (>=5.3.0)", "sphinx-rtd-theme (>=1.0.0)", "towncrier (>=21,<22)"]
test = ["eth-utils (>=2.0.0)", "hypothesis (>=3.44.24,<=6.31.6)", "pytest (>=7.0.0)", "pytest-xdist (>=2.4.0)"]

[[package]]
name = "humanize"
version = "4.11.0"
description = "Python humanize utilities"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
tests = ["freezegun", "pytest", "pytest-cov"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
all = ["ruff (>=0.6.2)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "flake8 (>=7.1.1)"]

[[package]]
name = "importlib-metadata"
version = "6.11.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
docs = ["sphinx (>=3.5)", "sphinx (<7.2.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=2.2)", "pytest-ruff", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "importlib-resources (>=1.3)"]

[[package]]
name = "ipykernel"
version = "6.29.5"
description = "IPython Kernel for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "platform_system == \"Darwin\""}
comm = ">=0.1.1"
debugpy = ">=1.6.5"
ipython = ">=7.23.1"
jupyter-client = ">=6.1.12"
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
matplotlib-inline = ">=0.1"
nest-asyncio = "*"
packaging = "*"
psutil = "*"
pyzmq = ">=24"
tornado = ">=6.1"
traitlets = ">=5.4.0"

[package.extras]
cov = ["coverage", "curio", "matplotlib", "pytest-cov", "trio"]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-spelling", "trio"]
pyqt5 = ["pyqt5"]
pyside6 = ["pyside6"]
test = ["flaky", "ipyparallel", "pre-commit", "pytest-asyncio (>=0.23.5)", "pytest-cov", "pytest-timeout", "pytest (>=7.0)"]

[[package]]
name = "ipython"
version = "8.30.0"
description = "IPython: Productive Interactive Computing"
category = "dev"
optional = false
python-versions = ">=3.10"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
exceptiongroup = {version = "*", markers = "python_version < \"3.11\""}
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\" and sys_platform != \"emscripten\""}
prompt_toolkit = ">=3.0.41,<3.1.0"
pygments = ">=2.4.0"
stack_data = "*"
traitlets = ">=5.13.0"
typing_extensions = {version = ">=4.6", markers = "python_version < \"3.12\""}

[package.extras]
black = ["black"]
doc = ["docrepr", "exceptiongroup", "intersphinx-registry", "ipykernel", "ipython", "matplotlib", "setuptools (>=18.5)", "sphinx-rtd-theme", "sphinx (>=1.3)", "sphinxcontrib-jquery", "tomli", "typing-extensions"]
kernel = ["ipykernel"]
nbconvert = ["nbconvert"]
nbformat = ["nbformat"]
notebook = ["ipywidgets", "notebook"]
parallel = ["ipyparallel"]
qtconsole = ["qtconsole"]
test = ["pytest", "pytest-asyncio (<0.22)", "testpath", "pickleshare", "packaging"]
test-extra = ["ipython", "curio", "matplotlib (!=3.2.0)", "nbformat", "numpy (>=1.23)", "pandas", "trio"]
matplotlib = ["matplotlib"]
all = ["ipython", "ipython"]

[[package]]
name = "isodate"
version = "0.6.1"
description = "An ISO 8601 date/time/duration parser and formatter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "jedi"
version = "0.19.2"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.4,<0.9.0"

[package.extras]
docs = ["Jinja2 (==2.11.3)", "MarkupSafe (==1.1.1)", "Pygments (==2.8.1)", "alabaster (==0.7.12)", "babel (==2.9.1)", "chardet (==4.0.0)", "commonmark (==0.8.1)", "docutils (==0.17.1)", "future (==0.18.2)", "idna (==2.10)", "imagesize (==1.2.0)", "mock (==1.0.1)", "packaging (==20.9)", "pyparsing (==2.4.7)", "pytz (==2021.1)", "readthedocs-sphinx-ext (==2.1.4)", "recommonmark (==0.5.0)", "requests (==2.25.1)", "six (==1.15.0)", "snowballstemmer (==2.1.0)", "sphinx-rtd-theme (==0.4.3)", "sphinx (==1.8.5)", "sphinxcontrib-serializinghtml (==1.1.4)", "sphinxcontrib-websupport (==1.2.4)", "urllib3 (==1.26.4)"]
qa = ["flake8 (==5.0.4)", "mypy (==0.971)", "types-setuptools (==67.2.0.1)"]
testing = ["django", "attrs", "colorama", "docopt", "pytest (<9.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.4"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jsonpath-ng"
version = "1.7.0"
description = "A final implementation of JSONPath for Python that aims to be standard compliant, including arithmetic and binary comparison operators and providing clear AST for metaprogramming."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ply = "*"

[[package]]
name = "jsonschema"
version = "4.23.0"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
jsonschema-specifications = ">=2023.03.6"
referencing = ">=0.28.4"
rpds-py = ">=0.7.1"

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=24.6.0)"]

[[package]]
name = "jsonschema-specifications"
version = "2024.10.1"
description = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
referencing = ">=0.31.0"

[[package]]
name = "jupyter-client"
version = "8.6.3"
description = "Jupyter protocol implementation and client libraries"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
jupyter-core = ">=4.12,<5.0.0 || >=5.1.0"
python-dateutil = ">=2.8.2"
pyzmq = ">=23.0"
tornado = ">=6.2"
traitlets = ">=5.3"

[package.extras]
docs = ["ipykernel", "myst-parser", "pydata-sphinx-theme", "sphinx-autodoc-typehints", "sphinx (>=4)", "sphinxcontrib-github-alt", "sphinxcontrib-spelling"]
test = ["coverage", "ipykernel (>=6.14)", "mypy", "paramiko", "pre-commit", "pytest-cov", "pytest-jupyter[client] (>=0.4.1)", "pytest-timeout", "pytest (<8.2.0)"]

[[package]]
name = "jupyter-core"
version = "5.7.2"
description = "Jupyter core package. A base package on which Jupyter projects rely."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
platformdirs = ">=2.5"
pywin32 = {version = ">=300", markers = "sys_platform == \"win32\" and platform_python_implementation != \"PyPy\""}
traitlets = ">=5.3"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx-autodoc-typehints", "sphinxcontrib-github-alt", "sphinxcontrib-spelling", "traitlets"]
test = ["ipykernel", "pre-commit", "pytest-cov", "pytest-timeout", "pytest (<8)"]

[[package]]
name = "leather"
version = "0.4.0"
description = "Python charting for 80% of humans."
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["pytest", "pytest-cov", "lxml (>=3.6.0)", "cssselect (>=0.9.1)"]

[[package]]
name = "makefun"
version = "1.15.6"
description = "Small library to dynamically create python functions."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "markdown-it-py"
version = "3.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
code_style = ["pre-commit (>=3.0,<4.0)"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins"]
profiling = ["gprof2dot"]
rtd = ["mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx-book-theme", "jupyter-sphinx"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "markupsafe"
version = "3.0.2"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "mashumaro"
version = "3.14"
description = "Fast and well tested serialization library"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
msgpack = {version = ">=0.5.6", optional = true, markers = "extra == \"msgpack\""}
typing-extensions = ">=4.1.0"

[package.extras]
msgpack = ["msgpack (>=0.5.6)"]
orjson = ["orjson"]
toml = ["tomli-w (>=1.0)", "tomli (>=1.1.0)"]
yaml = ["pyyaml (>=3.13)"]

[[package]]
name = "matplotlib-inline"
version = "0.1.7"
description = "Inline Matplotlib backend for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
traitlets = "*"

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "more-itertools"
version = "10.5.0"
description = "More routines for operating on iterables, beyond itertools"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "msgpack"
version = "1.1.0"
description = "MessagePack serializer"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "narwhals"
version = "1.19.0"
description = "Extremely lightweight compatibility layer between dataframe libraries"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
cudf = ["cudf (>=23.08.00)"]
dask = ["dask[dataframe] (>=2024.7)"]
dev = ["covdefaults", "dask", "duckdb", "hypothesis", "hypothesis", "pandas", "polars", "pyarrow", "pyarrow-stubs", "pyspark", "pytest", "pytest-cov", "pytest-env", "pytest-randomly", "scikit-learn", "tqdm", "typing-extensions"]
docs = ["black", "duckdb", "jinja2", "markdown-exec", "mkdocs", "mkdocs-autorefs", "mkdocs-material", "mkdocstrings", "pandas", "polars (>=1.0.0)", "pyarrow"]
modin = ["modin"]
pandas = ["pandas (>=0.25.3)"]
polars = ["polars (>=0.20.3)"]
pyarrow = ["pyarrow (>=11.0.0)"]
pyspark = ["pyspark (>=3.3.0)"]

[[package]]
name = "nest-asyncio"
version = "1.6.0"
description = "Patch asyncio to allow nested event loops"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "networkx"
version = "3.4.2"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.10"

[package.extras]
default = ["numpy (>=1.24)", "scipy (>=1.10,!=1.11.0,!=1.11.1)", "matplotlib (>=3.7)", "pandas (>=2.0)"]
developer = ["changelist (==0.5)", "pre-commit (>=3.2)", "mypy (>=1.1)", "rtoml"]
doc = ["sphinx (>=7.3)", "pydata-sphinx-theme (>=0.15)", "sphinx-gallery (>=0.16)", "numpydoc (>=1.8.0)", "pillow (>=9.4)", "texext (>=0.6.7)", "myst-nb (>=1.1)", "intersphinx-registry"]
example = ["osmnx (>=1.9)", "momepy (>=0.7.2)", "contextily (>=1.6)", "seaborn (>=0.13)", "cairocffi (>=1.7)", "igraph (>=0.11)", "scikit-learn (>=1.5)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.14)", "pydot (>=3.0.1)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)"]

[[package]]
name = "numpy"
version = "2.2.0"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.10"

[[package]]
name = "ordered-set"
version = "4.1.0"
description = "An OrderedSet is a custom MutableSet that remembers its order, so that every"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["pytest", "black", "mypy"]

[[package]]
name = "orjson"
version = "3.10.12"
description = "Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "packaging"
version = "24.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pandas"
version = "2.2.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = [
    {version = ">=1.22.4", markers = "python_version < \"3.11\""},
    {version = ">=1.23.2", markers = "python_version == \"3.11\""},
    {version = ">=1.26.0", markers = "python_version >= \"3.12\""},
]
python-dateutil = ">=2.8.2"
pytz = ">=2020.1"
tzdata = ">=2022.7"

[package.extras]
test = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]
pyarrow = ["pyarrow (>=10.0.1)"]
performance = ["bottleneck (>=1.3.6)", "numba (>=0.56.4)", "numexpr (>=2.8.4)"]
computation = ["scipy (>=1.10.0)", "xarray (>=2022.12.0)"]
fss = ["fsspec (>=2022.11.0)"]
aws = ["s3fs (>=2022.11.0)"]
gcp = ["gcsfs (>=2022.11.0)", "pandas-gbq (>=0.19.0)"]
excel = ["odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)"]
parquet = ["pyarrow (>=10.0.1)"]
feather = ["pyarrow (>=10.0.1)"]
hdf5 = ["tables (>=3.8.0)"]
spss = ["pyreadstat (>=1.2.0)"]
postgresql = ["SQLAlchemy (>=2.0.0)", "psycopg2 (>=2.9.6)", "adbc-driver-postgresql (>=0.8.0)"]
mysql = ["SQLAlchemy (>=2.0.0)", "pymysql (>=1.0.2)"]
sql-other = ["SQLAlchemy (>=2.0.0)", "adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)"]
html = ["beautifulsoup4 (>=4.11.2)", "html5lib (>=1.1)", "lxml (>=4.9.2)"]
xml = ["lxml (>=4.9.2)"]
plot = ["matplotlib (>=3.6.3)"]
output-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.9.0)"]
clipboard = ["PyQt5 (>=5.15.9)", "qtpy (>=2.3.0)"]
compression = ["zstandard (>=0.19.0)"]
consortium-standard = ["dataframe-api-compat (>=0.1.7)"]
all = ["adbc-driver-postgresql (>=0.8.0)", "adbc-driver-sqlite (>=0.8.0)", "beautifulsoup4 (>=4.11.2)", "bottleneck (>=1.3.6)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=2022.12.0)", "fsspec (>=2022.11.0)", "gcsfs (>=2022.11.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.9.2)", "matplotlib (>=3.6.3)", "numba (>=0.56.4)", "numexpr (>=2.8.4)", "odfpy (>=1.4.1)", "openpyxl (>=3.1.0)", "pandas-gbq (>=0.19.0)", "psycopg2 (>=2.9.6)", "pyarrow (>=10.0.1)", "pymysql (>=1.0.2)", "PyQt5 (>=5.15.9)", "pyreadstat (>=1.2.0)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "python-calamine (>=0.1.7)", "pyxlsb (>=1.0.10)", "qtpy (>=2.3.0)", "scipy (>=1.10.0)", "s3fs (>=2022.11.0)", "SQLAlchemy (>=2.0.0)", "tables (>=3.8.0)", "tabulate (>=0.9.0)", "xarray (>=2022.12.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.5)", "zstandard (>=0.19.0)"]

[[package]]
name = "parsedatetime"
version = "2.6"
description = "Parse human-readable date/time text."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "parso"
version = "0.8.4"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==5.0.4)", "mypy (==0.971)", "types-setuptools (==67.2.0.1)"]
testing = ["docopt", "pytest"]

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pathvalidate"
version = "3.2.1"
description = "pathvalidate is a Python library to sanitize/validate a string such as filenames/file-paths/etc."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx-rtd-theme (>=1.2.2)", "Sphinx (>=2.4)", "urllib3 (<2)"]
readme = ["readmemaker (>=1.1.0)", "path (>=13,<17)"]
test = ["allpairspy (>=2)", "click (>=6.2)", "Faker (>=1.0.8)", "pytest (>=6.0.1)", "pytest-md-report (>=0.6.2)"]

[[package]]
name = "pendulum"
version = "3.0.0"
description = "Python datetimes made easy"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
python-dateutil = ">=2.6"
tzdata = ">=2020.1"

[package.extras]
test = ["time-machine (>=2.6.0)"]

[[package]]
name = "pexpect"
version = "4.9.0"
description = "Pexpect allows easy control of interactive console applications."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pillow"
version = "11.0.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=8.1)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinxext-opengraph"]
fpx = ["olefile"]
mic = ["olefile"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]
typing = ["typing-extensions"]
xmp = ["defusedxml"]

[[package]]
name = "platformdirs"
version = "4.3.6"
description = "A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`."
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo (>=2024.8.6)", "proselint (>=0.14)", "sphinx-autodoc-typehints (>=2.4)", "sphinx (>=8.0.2)"]
test = ["appdirs (==1.4.4)", "covdefaults (>=2.3)", "pytest-cov (>=5)", "pytest-mock (>=3.14)", "pytest (>=8.3.2)"]
type = ["mypy (>=1.11.2)"]

[[package]]
name = "pluggy"
version = "1.5.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "ply"
version = "3.11"
description = "Python Lex & Yacc"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "prompt-toolkit"
version = "3.0.48"
description = "Library for building powerful interactive command lines in Python"
category = "dev"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "protobuf"
version = "5.29.2"
description = ""
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "psutil"
version = "6.1.0"
description = "Cross-platform lib for process and system monitoring in Python."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.extras]
dev = ["black", "check-manifest", "coverage", "packaging", "pylint", "pyperf", "pypinfo", "pytest-cov", "requests", "rstcheck", "ruff", "sphinx", "sphinx-rtd-theme", "toml-sort", "twine", "virtualenv", "wheel"]
test = ["pytest", "pytest-xdist", "setuptools"]

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.3"
description = "Safely evaluate AST nodes without side effects"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "pyarrow"
version = "18.1.0"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
test = ["pytest", "hypothesis", "cffi", "pytz", "pandas"]

[[package]]
name = "pycparser"
version = "2.22"
description = "C parser in Python"
category = "dev"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pydantic"
version = "2.10.4"
description = "Data validation using Python type hints"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.27.2"
typing-extensions = ">=4.12.2"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata"]

[[package]]
name = "pydantic-core"
version = "2.27.2"
description = "Core functionality for Pydantic validation and serialization"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pydeck"
version = "0.9.1"
description = "Widget for deck.gl maps"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
jinja2 = ">=2.10.1"
numpy = ">=1.16.4"

[package.extras]
carto = ["pydeck-carto"]
jupyter = ["ipywidgets (>=7,<8)", "traitlets (>=4.3.2)", "ipython (>=5.8.0)", "ipykernel (>=5.1.2)"]

[[package]]
name = "pygments"
version = "2.18.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "python-dateutil"
version = "2.9.0.post0"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-slugify"
version = "8.0.4"
description = "A Python slugify application that also handles Unicode"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
text-unidecode = ">=1.3"

[package.extras]
unidecode = ["Unidecode (>=1.1.1)"]

[[package]]
name = "pytimeparse"
version = "1.1.8"
description = "Time expression parser"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pytz"
version = "2024.2"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "308"
description = "Python for Window Extensions"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyzmq"
version = "26.2.0"
description = "Python bindings for 0MQ"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cffi = {version = "*", markers = "implementation_name == \"pypy\""}

[[package]]
name = "referencing"
version = "0.35.1"
description = "JSON Referencing + Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
rpds-py = ">=0.7.0"

[[package]]
name = "requests"
version = "2.32.3"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requirements-parser"
version = "0.11.0"
description = "This is a small Python module for parsing Pip requirement files."
category = "main"
optional = false
python-versions = "<4.0,>=3.8"

[package.dependencies]
packaging = ">=23.2"
types-setuptools = ">=69.1.0"

[[package]]
name = "rich"
version = "13.9.4"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"
typing-extensions = {version = ">=4.0.0,<5.0", markers = "python_version < \"3.11\""}

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "rpds-py"
version = "0.22.3"
description = "Python bindings to Rust's persistent data structures (rpds)"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "semver"
version = "3.0.2"
description = "Python helper for Semantic Versioning (https://semver.org)"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "simplejson"
version = "3.19.3"
description = "Simple, fast, extensible JSON encoder/decoder for Python"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.5"

[[package]]
name = "six"
version = "1.17.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[[package]]
name = "smmap"
version = "5.0.1"
description = "A pure Python implementation of a sliding window memory map manager"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "snowplow-tracker"
version = "1.0.4"
description = "Snowplow event tracker for Python. Add analytics to your Python and Django apps, webapps and games"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=2.25.1,<3.0"
types-requests = ">=2.25.1,<3.0"
typing-extensions = ">=3.7.4"

[[package]]
name = "sqlparse"
version = "0.5.3"
description = "A non-validating SQL parser."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["build", "hatch"]
doc = ["sphinx"]

[[package]]
name = "stack-data"
version = "0.6.3"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = ">=2.1.0"
executing = ">=1.2.0"
pure-eval = "*"

[package.extras]
tests = ["pytest", "typeguard", "pygments", "littleutils", "cython"]

[[package]]
name = "streamlit"
version = "1.41.1"
description = "A faster way to build and share data apps"
category = "main"
optional = false
python-versions = "!=3.9.7,>=3.9"

[package.dependencies]
altair = ">=4.0,<6"
blinker = ">=1.0.0,<2"
cachetools = ">=4.0,<6"
click = ">=7.0,<9"
gitpython = ">=3.0.7,<3.1.19 || >3.1.19,<4"
numpy = ">=1.23,<3"
packaging = ">=20,<25"
pandas = ">=1.4.0,<3"
pillow = ">=7.1.0,<12"
protobuf = ">=3.20,<6"
pyarrow = ">=7.0"
pydeck = ">=0.8.0b4,<1"
requests = ">=2.27,<3"
rich = ">=10.14.0,<14"
tenacity = ">=8.1.0,<10"
toml = ">=0.10.1,<2"
tornado = ">=6.0.3,<7"
typing-extensions = ">=4.3.0,<5"
watchdog = {version = ">=2.1.5,<7", markers = "platform_system != \"Darwin\""}

[package.extras]
snowflake = ["snowflake-snowpark-python[modin] (>=1.17.0)", "snowflake-connector-python (>=2.8.0)"]

[[package]]
name = "tenacity"
version = "9.0.0"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
doc = ["reno", "sphinx"]
test = ["pytest", "tornado (>=4.5)", "typeguard"]

[[package]]
name = "text-unidecode"
version = "1.3"
description = "The most basic Text::Unidecode port"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomlkit"
version = "0.13.2"
description = "Style preserving TOML library"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tornado"
version = "6.4.2"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "traitlets"
version = "5.14.3"
description = "Traitlets Python configuration system"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["myst-parser", "pydata-sphinx-theme", "sphinx"]
test = ["argcomplete (>=3.0.3)", "mypy (>=1.7.0)", "pre-commit", "pytest-mock", "pytest-mypy-testing", "pytest (>=7.0,<8.2)"]

[[package]]
name = "types-requests"
version = "2.32.0.20241016"
description = "Typing stubs for requests"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
urllib3 = ">=2"

[[package]]
name = "types-setuptools"
version = "75.6.0.20241126"
description = "Typing stubs for setuptools"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "typing-extensions"
version = "4.12.2"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tzdata"
version = "2024.2"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "urllib3"
version = "2.2.3"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
h2 = ["h2 (>=4,<5)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "watchdog"
version = "6.0.0"
description = "Filesystem events monitoring"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
watchmedo = ["PyYAML (>=3.10)"]

[[package]]
name = "wcwidth"
version = "0.2.13"
description = "Measures the displayed width of unicode strings in a terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "win-precise-time"
version = "1.4.2"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "zipp"
version = "3.21.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1)"]
cover = ["pytest-cov"]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "jaraco.test", "importlib-resources"]
type = ["pytest-mypy"]

[metadata]
lock-version = "1.1"
python-versions = "^3.10,<3.13"
content-hash = "8878dbb163cb402c8c4a470eaccc3c8f36319f3b7b1e8b28eb59914f2f8de37d"

[metadata.files]
agate = []
altair = []
annotated-types = []
appnope = []
asttokens = []
attrs = []
babel = []
blinker = []
cachetools = []
certifi = []
cffi = []
charset-normalizer = []
click = []
colorama = []
comm = []
daff = []
dbt-adapters = []
dbt-common = []
dbt-core = []
dbt-duckdb = []
dbt-extractor = []
dbt-semantic-interfaces = []
debugpy = []
decorator = []
deepdiff = []
dlt = []
duckdb = []
exceptiongroup = []
executing = []
fsspec = []
gitdb = []
gitpython = []
giturlparse = []
hexbytes = []
humanize = []
idna = []
importlib-metadata = []
ipykernel = []
ipython = []
isodate = []
jedi = []
jinja2 = []
jsonpath-ng = []
jsonschema = []
jsonschema-specifications = []
jupyter-client = []
jupyter-core = []
leather = []
makefun = []
markdown-it-py = []
markupsafe = []
mashumaro = []
matplotlib-inline = []
mdurl = []
more-itertools = []
msgpack = []
narwhals = []
nest-asyncio = []
networkx = []
numpy = []
ordered-set = []
orjson = []
packaging = []
pandas = []
parsedatetime = []
parso = []
pathspec = []
pathvalidate = []
pendulum = []
pexpect = []
pillow = []
platformdirs = []
pluggy = []
ply = []
prompt-toolkit = []
protobuf = []
psutil = []
ptyprocess = []
pure-eval = []
pyarrow = []
pycparser = []
pydantic = []
pydantic-core = []
pydeck = []
pygments = []
python-dateutil = []
python-slugify = []
pytimeparse = []
pytz = []
pywin32 = []
pyyaml = []
pyzmq = []
referencing = []
requests = []
requirements-parser = []
rich = []
rpds-py = []
semver = []
simplejson = []
six = []
smmap = []
snowplow-tracker = []
sqlparse = []
stack-data = []
streamlit = []
tenacity = []
text-unidecode = []
toml = []
tomlkit = []
tornado = []
traitlets = []
types-requests = []
types-setuptools = []
typing-extensions = []
tzdata = []
urllib3 = []
watchdog = []
wcwidth = []
win-precise-time = []
zipp = []
